#################################################################################################################################################
#Codes associated to the analysis used the paper 
#"The legacy of human use in Amazonian palm communities along environmental and accessibility gradients". 
#Global Ecology and Biogeography. In press.
#Codes by Otso Ovaskainen, Mirkka Jones and Gabriela Zuquim
#The codes were modified from November 2020 Hmsc course scripts. 
#Current versions of these training materials are available at https://www.helsinki.fi/en/researchgroups/statistical-ecology/software/hmscCodes
#see readme file for detail
##################################################################################################################################################

library(Hmsc)
load("models_thin_1000_samples_250_chains_4.Rdata")

library(Hmsc)

  m = models[[1]]
  preds = computePredictedValues(m)
  VP = computeVariancePartitioning(m)
  VPr = VP
  MF = evaluateModelFit(hM=m, predY=preds)
  R2 = MF$TjurR2
  for(k in 1:m$ns)
  {VPr$vals[,k] = R2[k]*VPr$vals[,k]}

#combine the variation partitioning values with use diversity trait data for each species for figure 1
#var part values are scaled by TjurÂ´s values
VPr_useintensity = data.frame(m$TrData$use_intensity,t(VPr$vals)*100)
write.csv2(VPr_useintensity, "VPr_useintensity.csv")


###Generates Vap plot (Fig. 1)
library(dplyr)

varpart<-VPr_useintensity
####Sum climatic and landsat variables####
vpclim<-varpart[1:2,]
vpclim2<-colSums(vpclim[,-1])
vpRS<-varpart[3:5,]
vpRS2<-colSums(vpRS[,-1])

varpart2<-rbind(vpclim2, vpRS2,varpart[-c(1:5),-1])
#add the variable names
varpart2$X<-c("clim","Landsat", "poly_logCat", "log.HAND_50", "DistRivlog10", "hab_type2", "Random_transect", "TjurR2")
#put the variables name as first column
varpart2<-varpart2[,c(ncol(varpart2),1:(ncol(varpart2)-1))]
row.names(varpart2) <- varpart2$X 
varpart2 <- varpart2[,-1]
vp_prop<-t(varpart2)
vp_prop<-as.data.frame(vp_prop)
vp_prop$clim_p<-vp_prop$clim*vp_prop$TjurR2*100
vp_prop$Landsat_p<-vp_prop$Landsat*vp_prop$TjurR2*100
vp_prop$polylogCat_p<-vp_prop$poly_logCat*vp_prop$TjurR2*100
vp_prop$log.HAND_50_p<-vp_prop$log.HAND_50*vp_prop$TjurR2*100
vp_prop$DistRivlog10_p<-vp_prop$DistRivlog10*vp_prop$TjurR2*100
vp_prop$hab_type2_p<-vp_prop$hab_type2*vp_prop$TjurR2*100
vp_prop$Random_transect_p<-vp_prop$Random_transect*vp_prop$TjurR2*100
vp_prop$NE<-100-(vp_prop$TjurR2*100)
vp_prop<-t(vp_prop)
##just checking...
colSums(vp_prop[9:16,])
VP<-as.data.frame(vp_prop[c(11,9,10,12:16),])
VP<-t(VP)
VPuses=cbind(VP, use2)
VPuses2<-as.data.frame(VPuses[,c(1:8,16)])
VPuses2<-VPuses2[with(VPuses2, order(use_intensity, NE)),]
VPuses2<-t(VPuses2)
VPuses3<-VPuses2[1:8,]



#####BARPLOT####
                                    # Add legend to barplot
       legend = c("Soil (9.1)","Climate (11.7)","Landsat (4.3)","HAND (0.5)", "Distance to river (0.4)", 
                  "Habitat type (3.8)", "Random: transect (4.5)","Unexplained (0.6)")
       

pdf("barplot_uses.pdf", width = 10, height = 12)
par(mar = c(3, 10, 1, 1), lwd=0.1)
col=c("#FF0000", "#FFAA00", "#00AAFF",  "#0000FF" ,"#00FF00", "#00FFAA"  ,"cornsilk", "white")

barplot(VPuses3,col = col, las=2, horiz=2, cex.names = 0.8)
legend("bottomright",                                    # Add legend to barplot
       legend = legend,
       fill = col,
       bg="white")

dev.off()

pdf("LEGEND.pdf", width = 10, height = 12)
par(mar = c(3, 10, 1, 1), lwd=0.1)
col=c("#FF0000", "#FFAA00", "#00AAFF",  "#0000FF" ,"#00FF00", "#00FFAA"  ,"cornsilk", "white")

barplot(VPuses3,col = col, las=2, horiz=2, cex.names = 0.8)
legend("bottomright",                                    # Add legend to barplot
       legend = legend,
       fill = col,
       bg="white", cex=2)

dev.off()

#####ADD lines to create suppl Stable 1#####


#Import environmental covariate values for all grid cells across the Amazonian study region.
grid = fread("gridded_WAamazonian_predictorsV2.csv")

# Thin the Amazonian regional environmental predictor grid by taking every fourth x and y coordinate in the original grid 
# before making Hmsc predictions of species occurrence probabilities per cell computationally feasible.

uniqueX = sort(unique(grid$x))
uniqueY = sort(unique(grid$y))

thinX = seq(from = 1, to = length(uniqueX), by = 4)
selX = unique(grid$x)[thinX]
grid = grid[grid$x %in% selX,]

thinY = seq(from = 1, to = length(uniqueY), by = 4)
selY = unique(grid$y)[thinY]
grid = grid[grid$y %in% selY,]

fwrite(grid, "sparse_WAamazonian_predictors.csv")

##################

# NOTE: If no grid thinning is needed, predictions script starts here:

grid = fread("sparse_WAamazonian_predictors.csv")

library(Hmsc)
library(data.table)
library(abind)

load("nonspatial_models_thin_1000_samples_250_chains_4.Rdata")
m = models[[1]]

m$XData = m$XData[, c("Chelsa150_bio6", "Chelsa150_bio15", "Band3_median15", "Band4_median15", "Band7_median15", "soilfern", "log.HAND_50")]

#Predictions are generated row by row (by Y coordinate) across the Amazonian regional predictor grid.
#WARNING! The next lines will take some hours to run in a regular computer
uniqueY = unique(grid$y)

predictions = data.frame(matrix(nrow = nrow(grid), ncol = ncol(m$Y)+2))
names(predictions) = c("x", "y", colnames(m$Y))

for(n in 1:length(uniqueY))
{
  selY = uniqueY[n]
  gridrow = grid[which(grid$y==selY),]
  
  xy.grid = data.frame(gridrow[, c("x", "y")])
  row.names(xy.grid) = gridrow$Pixel
  
  XData.grid = data.frame(gridrow[,-c(1:3)])
  
  #Check if some pixels cannot be predicted due to missing values:
  NAs = which(is.na(rowSums(XData.grid)))
  if(length(NAs>0))
  {
    xy.grid = xy.grid[-NAs,]
    XData.grid = XData.grid[-NAs,]
  }
  
  # Generate Hmsc predictions of probability of occurrence per species (predY = 1000 posterior predicted Y matrices, EpredY is their mean)
  Gradient = prepareGradient(m, XDataNew = XData.grid, sDataNew = list(transect = xy.grid))
  predY = predict(m, Gradient = Gradient, expected = TRUE)
  EpredY = apply(abind(predY,along = 3), c(1,2), mean)
  EpredY = cbind(xy.grid, EpredY)
  
  if(length(NAs>0))
  {
    NApixels = data.frame(cbind(gridrow$x[NAs], gridrow$y[NAs]))
    row.names(NApixels) = gridrow$Pixel[NAs]
    NApixels[,3:ncol(EpredY)] = NA
    names(NApixels) = names(EpredY)
    EpredY = rbind(NApixels, EpredY)
    EpredY = EpredY[order(as.numeric(row.names(EpredY))),]
  }
  
  predictions = rbind(predictions, EpredY)
  
}

# Based on the mean predicted occurrence probabilities per species, calculate predicted species richness (predS)
# and predicted trait means (predT) per grid cell.

preds = as.matrix(predictions[, 3:80])
predS = apply(predictions[, 3:80], 1, sum, na.rm = T)
predT = (preds %*% m$Tr)/matrix(rep(rowSums(preds),m$nt), ncol = m$nt)

#Combine posterior mean predicted species richness, human use trait values and species' p(occurrences):
predictions = cbind(predS, predT[,-1], predictions)

# Save data for mapping (Fig. 3), etc.
fwrite(predictions, "Palm_Predicted_Occurrence_Probabilities_WA.csv")
